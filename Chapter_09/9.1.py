"""
    符合 Python 风格的对象
    1.
    鸭子类型: 我们只需按照预定行为实现对象所需的方法即可。

    2.
    repr(): 以便于开发者理解的方式返回对象的字符串形式
    str(): 以便于用户理解的方式返回对象的字符串形式

    3.
    classmethod: 定义操作类，而不是操作实例的方法。它改变了调用方法的方式，因此类方法的第一个参数是类本身，而不是实例。
        classmethod 的常见用法是定义备选构造方法
    staticmethod: 也会改变方法的调用方式，但是第一个参数不是特殊的值。
        其实静态方法就是普通函数，只是定义在类中而不是在模块中。

    4.
    Python 的私有属性和“受保护的”属性
    如果以 __mood 的形式命名实例属性，Python会把属性名存入实例的 __dict__ 属性中，而且会在前面加上一个下划线和类名。
    如 Dog 类中 __mood 会变成 _Dog__mood ，这个语言特性叫做名称改写。

    5.
    覆盖类属性
    如果为一个不存在的实例属性赋值，会创建实例属性，同名类属性不受影响。
    如果想修改类属性则必须在类上修改，不能通过实例修改。
"""